<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roomio.carret.operation">

	<!-- 문의 정보 resultMap  -->
	
	<resultMap type="hashMap" id="questionInfoMap">
		<result column="franchise_name" property="franchise_name"/>
		<result column="name" property="name"/>
		<result column="member_id" property="member_id"/>
		<result column="content" property="content"/>
		<result column="question_id" property="question_id"/>
		<result column="regdate" property="regdate"/>
		<result column="question_content" property="question_content"/>
		<result column="answer_status" property="answer_status"/>
		<collection property="imageList" ofType="java.lang.String" javaType="list">
			<result column="imageName"/>
		</collection>
	</resultMap>

	<!-- 문의 정보 얻어오기 -->

	<select id="getQuestion" parameterType="int" resultMap="questionInfoMap">
		
		select f.franchise_name,m.name,m.member_id,qc.content,q.question_id,q.regdate,
		q.question_content,q.answer_status,qi.name as imageName
		from question q
		inner join member m 
		on q.member_id = m.member_id
		inner join question_category qc
		on q.question_category_id = qc.question_category_id
		inner join franchise f
		on m.franchise_id = f.franchise_id
		left join question_image qi
		on q.question_id = qi.question_id
		where q.question_id = ${questionId}
	
	</select>
	
	<!-- 문의 답변 등록하기  -->
	
	<insert id="addQuestionAnswer" parameterType="hashMap">
	
		insert into question_answer(question_id,franchise_manager_id,content,send_message)
		values(${questionId},${franchiseManagerId},#{content},${sendMessage})
	
	</insert>
	
	<!-- 문의 상태 변경(답변완료) -->
	<update id="updateQuestion" parameterType="int">
		
		update question
		set answer_status = 2 
		where question_id = ${questionId}
	
	</update>
	
	<!-- 문의 카테고리 리스트 -->
	<select id="getQuestionCategory" resultType="hashMap">
		
		select question_category_id,content
		from question_category
	
	</select>
	
	<sql id="questionSearch">
		<where>
			<choose>
				<when test='startDate != null and !startDate.equals("") and endDate != null and !endDate.equals("")'>
					date_format(q.regdate,'%Y-%m-%d') between #{startDate} and #{endDate}
				</when>
				<when test='startDate != null and !startDate.equals("")'><![CDATA[date_format(q.regdate,'%Y-%m-%d') > #{startDate}]]></when>
				<when test='endDate != null and !endDate.equals("")'><![CDATA[date_format(q.regdate,'%Y-%m-%d') < #{endDate}]]></when>
			</choose>
			<if test='franchiseId != null and franchiseId != 0'>and f.franchise_id = ${franchiseId}</if>
			<if test='questionCategoryId != null and questionCategoryId != 0'>and qc.question_category_id = ${questionCategoryId}</if>
			<if test="status == 1">and q.answer_status = 1</if>
			<if test="status == 2">and q.answer_status = 2</if>
			<if test='writer != null and writer.equals("all")'>
				and m.member_id LIKE CONCAT('%',#{writerInput},'%') or
				m.name LIKE CONCAT('%',#{writerInput},'%')
			</if>
			<if test='writer != null and writer.equals("num")'>and m.member_id LIKE CONCAT('%',#{writerInput},'%')</if>
			<if test='writer != null and writer.equals("name")'>and m.name LIKE CONCAT('%',#{writerInput},'%')</if>
			<if test='keyWord != null and keyWord.equals("all")'>
				and q.question_id LIKE CONCAT('%',#{keyWordInput},'%') or
				q.question_content LIKE CONCAT('%',#{keyWordInput},'%')
			</if>
			<if test='keyWord != null and keyWord.equals("num")'>and q.question_id LIKE CONCAT('%',#{keyWordInput},'%')</if>
			<if test='keyWord != null and keyWord.equals("content")'>and q.question_content LIKE CONCAT('%',#{keyWordInput},'%')</if>
		</where>
	</sql>
	
	<!-- 문의 리스트 -->
	
	<select id="getQuestionList" parameterType="com.roomio.carret.bean.QuestionRegisterBean" resultType="hashMap">
	 
		select q.question_id,q.regdate as questionDate,f.franchise_name,m.name,m.member_id,qc.content,q.question_content,q.answer_status,fm.id,qa.regdate as questionCategoryDate
		from question q 
		left join question_answer qa
		on q.question_id = qa.question_id
		inner join franchise_manager fm
		on qa.franchise_manager_id = fm.franchise_manager_id
		inner join question_category qc
		on q.question_category_id = qc.question_category_id
		inner join member m
		on q.member_id = m.member_id
		inner join franchise f
		on m.franchise_id = f.franchise_id
		
		<include refid="questionSearch"></include>
		
	</select>
	
	<!-- 문의 글 갯수 -->
	<select id="getQuestionCnt" parameterType="com.roomio.carret.bean.QuestionRegisterBean" resultType="int">
	
		select count(*)
		from question q 
		inner join question_answer qa
		on q.question_id = qa.question_id
		inner join franchise_manager fm
		on qa.franchise_manager_id = fm.franchise_manager_id
		inner join question_category qc
		on q.question_category_id = qc.question_category_id
		inner join member m
		on q.member_id = m.member_id
		inner join franchise f
		on m.franchise_id = f.franchise_id
		
		<include refid="questionSearch"></include>
		
	</select>
	
	<!-- 신고 정보 얻어오기  -->
	
	<resultMap type="hashMap" id="reportInfoMap">
		<result column="franchise_name" property="franchise_name"/>
		<result column="name" property="name"/>
		<result column="member_id" property="member_id"/>
		<result column="regdate" property="regdate"/>
		<result column="report_id" property="report_id"/>
		<result column="member_or_shop" property="member_or_shop"/>
		<result column="member_or_shop_num" property="member_or_shop_num"/>
		<result column="member_or_shop_name" property="member_or_shop_name"/>
		<result column="content" property="content"/>
		<result column="sub_content" property="sub_content"/>
		<result column="report_to" property="report_to"/>
		<result column="report_to_num" property="report_to_num"/>
		<result column="reportContent" property="reportContent"/>
		<result column="answer_status" property="answer_status"/>
		<collection property="imageList" ofType="java.lang.String" javaType="list">
			<result column="image_name"/>
		</collection>
	</resultMap>
	
	<select id="getReportInfo" parameterType="int" resultMap="reportInfoMap">
		
		select f.franchise_name,m.name,m.member_id,r.regdate,r.report_id,r.member_or_shop,r.member_or_shop_name,
		r.member_or_shop_num,rc.content,rc.sub_content,r.report_to,r.report_to_num,r.content as reportContent,
		r.answer_status,ri.image_name
		from report r
		inner join franchise f
		on r.franchise_id = f.franchise_id
		inner join member m
		on r.member_id = m.member_id
		inner join report_categoris rc
		on r.report_categoris_id = rc.report_categoris_id
		left join report_image ri
		on r.report_id = ri.report_id
		where r.report_id = ${reportId}
	
	</select>
	
	<!-- 문의 답변 등록하기  -->
	
	<insert id="addReportReply" parameterType="hashMap">
	
		insert into report_reply(report_id,franchise_manager_id,reply_content,send_message)
		values(${reportId},${franchiseManagerId},#{content},${sendMessage})
	
	</insert>
	
	<!-- 문의 상태 변경(답변완료) -->
	<update id="updateReport" parameterType="int">
		
		update report
		set answer_status = 2 
		where report_id = ${reportId}
	
	</update>
	
	<!-- 신고 리스트 검색 조건 -->
	<sql id="reportSearch">
		<where>
			<choose>
				<when test='startDate != null and !startDate.equals("") and endDate != null and !endDate.equals("")'>
					date_format(r.regdate,'%Y-%m-%d') between #{startDate} and #{endDate}
				</when>
				<when test='startDate != null and !startDate.equals("")'><![CDATA[date_format(r.regdate,'%Y-%m-%d') > #{startDate}]]></when>
				<when test='endDate != null and !endDate.equals("")'><![CDATA[date_format(r.regdate,'%Y-%m-%d') < #{endDate}]]></when>
			</choose>
			<if test='franchiseId != null and franchiseId != 0'>and f.franchise_id = ${franchiseId}</if>
			<if test='reportCategoryId == 1'>and rc.content = ${reportCategoryId}</if>
			<if test='reportCategoryId == 2'>and rc.content = ${reportCategoryId}</if>
			<if test='reportCategoryId == 3'>and rc.content = ${reportCategoryId}</if>
			<if test="status == 1">and r.answer_status = 1</if>
			<if test="status == 2">and r.answer_status = 2</if>
			<if test='writer != null and writer.equals("all")'>
				and m.member_id LIKE CONCAT('%',#{writerInput},'%') or
				m.name LIKE CONCAT('%',#{writerInput},'%')
			</if>
			<if test='writer != null and writer.equals("num")'>and m.member_id LIKE CONCAT('%',#{writerInput},'%')</if>
			<if test='writer != null and writer.equals("name")'>and m.name LIKE CONCAT('%',#{writerInput},'%')</if>
			<if test='keyWord != null and keyWord.equals("all")'>
				and r.report_id LIKE CONCAT('%',#{keyWordInput},'%') or
				r.content LIKE CONCAT('%',#{keyWordInput},'%')
			</if>
			<if test='keyWord != null and keyWord.equals("num")'>and r.report_id LIKE CONCAT('%',#{keyWordInput},'%')</if>
			<if test='keyWord != null and keyWord.equals("content")'>and r.content LIKE CONCAT('%',#{keyWordInput},'%')</if>
		</where>
	</sql>
	
	<!-- 신고 리스트 -->
	
	<select id="getReportList" parameterType="com.roomio.carret.bean.QuestionRegisterBean" resultType="hashMap">
	 
		select r.report_id,r.regdate as reportRegdate,f.franchise_name,m.name,m.member_id,
		rc.sub_content,r.content,r.answer_status,fm.id,rr.regdate as replyRegdate
		from report r
		inner join franchise f
		on r.franchise_id = f.franchise_id 
		inner join member m
		on r.member_id = m.member_id
		inner join report_categoris rc
		on r.report_categoris_id = rc.report_categoris_id
		inner join report_reply rr
		on r.report_id = rr.report_id
		inner join franchise_manager fm 
		on rr.franchise_manager_id = fm.franchise_manager_id
		
		<include refid="reportSearch"/>
		
	</select>
	
	<!-- 신고 리스트 갯수  -->
	<select id="getReportCnt" parameterType="com.roomio.carret.bean.QuestionRegisterBean" resultType="int">
	 
		select count(*)
		from report r
		inner join franchise f
		on r.franchise_id = f.franchise_id 
		inner join member m
		on r.member_id = m.member_id
		inner join report_categoris rc
		on r.report_categoris_id = rc.report_categoris_id
		inner join report_reply rr
		on r.report_id = rr.report_id
		inner join franchise_manager fm 
		on rr.franchise_manager_id = fm.franchise_manager_id
		
		<include refid="reportSearch"/>
		
	</select>
	
	<!-- 자주 묻는 질문 카테고리  -->
	<select id="getFreQuestionCategory" resultType="hashMap">
		
		select frequent_question_category_id,content
		from frequent_question_category
	
	</select>
	
	<!-- FAQ 등록  -->
	<insert id="addFAQ" parameterType="hashMap">
	
		insert into frequent_question(franchise_manager_id,frequent_question_category_id,title,content,view_status)
		values(${managerId},${categoryId},#{title},#{content},${viewStatus})
		
		<selectKey resultType="int" keyProperty="id" order="AFTER">
       		SELECT LAST_INSERT_ID()
    	</selectKey>
	
	</insert>
	
	<!-- 가맹점 별 FAQ 등록  -->
	<insert id="addFranFAQ" parameterType="list">
	
		insert into franchise_and_question(franchise_id,frequent_question_id)
		values
		<foreach collection="list" item="item" separator=",">
			(${item.franchiseId},${item.questionId})
		</foreach>
	
	</insert>
	
	<resultMap type="hashMap" id="freQuestionMap">
		<result column="id" property="id"/>
		<result column="frequent_question_category_id" property="frequent_question_category_id"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="view_status" property="view_status"/>
		<result column="frequent_question_id" property="frequent_question_id"/>
		<result column="regdate" property="regdate"/>
		<collection property="franList" ofType="int" javaType="list">
			<result column="franchise_id"/>
		</collection>
	</resultMap>
	
	<!-- FAQ 수정 input 정보  -->
	<select id="getFAQInfo" parameterType="int" resultMap="freQuestionMap">
				
		select fm.id,fq.frequent_question_category_id,fq.title,fq.content,fq.view_status,
		fq.frequent_question_id,fq.regdate,faq.franchise_id
		from frequent_question fq
		inner join franchise_manager fm
		on fq.franchise_manager_id = fm.franchise_manager_id
		left join franchise_and_question faq
		on fq.frequent_question_id = faq.frequent_question_id
		where fq.frequent_question_id = ${id}

	</select>
	
	<!-- FAQ 수정  -->
	<update id="updateFAQ" parameterType="hashMap">
		update frequent_question
		set frequent_question_category_id = ${categoryId},view_status = ${viewStatus},
		title = #{title}, content= #{content}
		where frequent_question_id = ${id}
	</update>
	
	<!-- FAQ 삭제 -->
	<delete id="deleteFAQ" parameterType="int">
	
		delete from frequent_question
		where frequent_question_id = ${id}
		
	</delete>
	
	<sql id="FAQSearch">	
		<where>
			<choose>
				<when test='startDate != null and !startDate.equals("") and endDate != null and !endDate.equals("")'>
					date_format(q.regdate,'%Y-%m-%d') between #{startDate} and #{endDate}
				</when>
				<when test='startDate != null and !startDate.equals("")'><![CDATA[date_format(q.regdate,'%Y-%m-%d') > #{startDate}]]></when>
				<when test='endDate != null and !endDate.equals("")'><![CDATA[date_format(q.regdate,'%Y-%m-%d') < #{endDate}]]></when>
			</choose>
			<if test='franchiseId != 0 and franchiseId !=""'>
				and f.franchise_id = ${franchiseId}
			</if>
			<if test='categoryId != 0 and categoryId != ""'>
				and q.frequent_question_category_id = ${categoryId}
			</if>
			<if test='viewStatus == 2'>and q.view_status == 1</if>
			<if test='viewStatus == 3'>and q.view_status == 2</if>
			<if test='maSelect == 1'>
				and m.id LIKE CONCAT('%',#{maKeyword},'%') or
				m.franchise_manager_id LIKE CONCAT('%',#{maKeyword},'%')
			</if>
			<if test='maSelect == 2'>and m.id LIKE CONCAT('%',#{maKeyword},'%')</if>
			<if test='maSelect == 3'>and m.franchise_manager_id LIKE CONCAT('%',#{maKeyword},'%')</if>
			<if test='select == 1'>
				and q.frequent_question_id LIKE CONCAT('%',#{keyword},'%') or
				q.title LIKE CONCAT('%',#{keyword},'%') or
				q.content LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test='select == 2'>and q.frequent_question_id LIKE CONCAT('%',#{keyword},'%')</if>
			<if test='select == 3'>and q.title LIKE CONCAT('%',#{keyword},'%')</if>
			<if test='select == 4'>and q.content LIKE CONCAT('%',#{keyword},'%')</if>
		</where>
	</sql>
	
	<select id="getFAQList" parameterType="com.roomio.carret.bean.FAQSearchBean" resultType="hashMap">
	
		select q.frequent_question_id , q.regdate, f.franchise_name, q.title,
		m.id,q.view_status,q.fixed_status
		from frequent_question q
		left join franchise_and_question faq
		on q.frequent_question_id = faq.frequent_question_id 
		inner join franchise f
		on faq.franchise_id = f.franchise_id
		inner join franchise_manager m 
		on q.franchise_manager_id = m.franchise_manager_id
		
		<include refid="FAQSearch"/>
		
	</select>
	
	<select id="getFAQCnt" parameterType="com.roomio.carret.bean.FAQSearchBean" resultType="int">
	
		select count(*)
		from frequent_question q
		left join franchise_and_question faq
		on q.frequent_question_id = faq.frequent_question_id 
		inner join franchise f
		on faq.franchise_id = f.franchise_id
		inner join franchise_manager m 
		on q.franchise_manager_id = m.franchise_manager_id
		
		<include refid="FAQSearch"/>
	
	</select>
	
	<!-- FAQ 일괄 노출 -->
	<update id="updateViewStatus1" parameterType="list">

			update frequent_question
			set view_status = 1
			where frequent_question_id in
			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
				${item}
			</foreach>
			
	</update>
	
	<!-- FAQ 일괄 노출 해제 -->
	<update id="updateViewStatus2" parameterType="list">

			update frequent_question
			set view_status = 2
			where frequent_question_id in
			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
				${item}
			</foreach>
			
	</update>
	
	<!-- 공지사항 등록  -->
	<insert id="addNotice" parameterType="hashMap">
	
		<choose>
			<when test='fixedStatus.equals("on")'>
				insert into notice(franchise_manager_id,title,content,view_status,fixed_status)
				values(${managerId},#{title},#{content},${viewStatus},1)
			</when>
			<otherwise>
				insert into notice(franchise_manager_id,title,content,view_status,fixed_status)
				values(${managerId},#{title},#{content},${viewStatus},2)
			</otherwise>
		</choose>
	
		<selectKey resultType="int" keyProperty="id" order="AFTER">
       		SELECT LAST_INSERT_ID()
    	</selectKey>
    	
	</insert>
	
	<!-- 가맹점 별 공지사항 등록  -->
	<insert id="addNoticeFran" parameterType="list">
	
		insert into notice_franchise(notice_id,franchise_id)
		values
		<foreach collection="list" item="item" separator=",">
			(${item.noticeId},${item.franchiseId})
		</foreach>
	
	</insert>
	
	<!-- 공지사항 수정 input 정보  -->
	
	<resultMap type="hashMap" id="noticeInfoMap">
		<result column="title" property="title"/>
		<result column="regdate" property="regdate"/>
		<result column="notice_id" property="notice_id"/>
		<result column="id" property="id"/>
		<result column="fixed_status" property="fixed_status"/>
		<result column="content" property="content"/>
		<result column="view_status" property="view_status"/>
		<collection property="franList" ofType="int" javaType="list">
			<result column="franchise_id"/>
		</collection>
	</resultMap>
	
	<select id="getNoticeInfo" parameterType="int" resultMap="noticeInfoMap">
		
		select n.title,n.regdate,n.notice_id,fm.id,n.fixed_status,nf.franchise_id,
		n.view_status,n.content
		from notice n
		left join notice_franchise nf
		on n.notice_id = nf.notice_id
		inner join franchise_manager fm
		on n.franchise_manager_id = fm.franchise_manager_id
		where n.notice_id = ${id}
		
		
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="hashMap">
	
		<choose>
			<when test='fixedStatus.equals("on")'>
				update notice
				set title = #{title}, content=#{content},
				view_status = ${viewStatus}, fixed_status = 1
				where notice_id = ${id}
			</when>
			<otherwise>
				update notice
				set title = #{title}, content=#{content},
				view_status = ${viewStatus}, fixed_status = 2
				where notice_id = ${id}
			</otherwise>
		</choose>

	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="deleteNotice" parameterType="int">
	
		delete from notice
		where notice_id = ${id}
		
	</delete>
	
	<sql id="noticeSearch">	
		<where>
			<choose>
				<when test='startDate != null and !startDate.equals("") and endDate != null and !endDate.equals("")'>
					date_format(n.regdate,'%Y-%m-%d') between #{startDate} and #{endDate}
				</when>
				<when test='startDate != null and !startDate.equals("")'><![CDATA[date_format(n.regdate,'%Y-%m-%d') > #{startDate}]]></when>
				<when test='endDate != null and !endDate.equals("")'><![CDATA[date_format(n.regdate,'%Y-%m-%d') < #{endDate}]]></when>
			</choose>
			<if test='franchiseId != 0 and franchiseId !=""'>
				and f.franchise_id = ${franchiseId}
			</if>
			<if test='viewStatus == 2'>and n.view_status == 1</if>
			<if test='viewStatus == 3'>and n.view_status == 2</if>
			<if test='register != null and !register.equals("")'>and fm.id LIKE CONCAT('%',#{register},'%')</if>
			<if test='select == 1'>
				and n.notice_id = ${keyword} or
				n.title LIKE CONCAT('%',#{keyword},'%') or
				n.content LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test='select == 2'>and n.notice_id = ${keyword}</if>
			<if test='select == 3'>and n.title LIKE CONCAT('%',#{keyword},'%')</if>
			<if test='select == 4'>and n.content LIKE CONCAT('%',#{keyword},'%')</if>
		</where>
	</sql>
	
	<select id="getNoticeList" parameterType="com.roomio.carret.bean.FAQSearchBean" resultType="hashMap">
	
		select n.notice_id,n.regdate,f.franchise_name,n.title,fm.id,n.view_status,n.fixed_status
		from notice n
		left join notice_franchise nf
		on n.notice_id = nf.notice_id
		inner join franchise f
		on nf.franchise_id = f.franchise_id
		inner join franchise_manager fm
		on n.franchise_manager_id = fm.franchise_manager_id
		
		<include refid="noticeSearch"/>
		
	</select>
	
	<select id="getNoticeCnt" parameterType="com.roomio.carret.bean.FAQSearchBean" resultType="int">
	
		select count(*)
		from notice n
		left join notice_franchise nf
		on n.notice_id = nf.notice_id
		inner join franchise f
		on nf.franchise_id = f.franchise_id
		inner join franchise_manager fm
		on n.franchise_manager_id = fm.franchise_manager_id
		
		<include refid="noticeSearch"/>
	
	</select>
	
	<!-- 공지사항 일괄 노출 -->
	<update id="updateNoticeViewStatus1" parameterType="list">

		update notice
		set view_status = 1
		where notice_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			${item}
		</foreach>
			
	</update>
	
	<!-- FAQ 일괄 노출 해제 -->
	<update id="updateNoticeViewStatus2" parameterType="list">

		update notice
		set view_status = 2
		where notice_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			${item}
		</foreach>
			
	</update>
	
	
	
	
	
</mapper>
